Alana Robinson, Erwin Lara, Sueann Seccafico, Patti Elfers
Team _12__ :: 
Methods - Summer 2022

CODE TRACING in the classroom
======================================


PROS:
---------------------------------------
<general positive aspects of incorporating code or algorithm tracing into a CS course, from your perspective>
Visualizations and ability to trace for errors
Help in working out the logic in program flow
Ability to use colors for representation of different pieces of information
Data flow
Comprehending code in breaking it down
Good for debugging used in paired programming 

CONS:
---------------------------------------
<general negative aspects of incorporating code or algorithm tracing into a CS course, from your perspective>
If you don't have enough understanding of the flow of the language and how it works, you can get stuck
Limitations of tracing if code is too long
Some of the tracing methods are not as good as others for specific programs due to room on paper
Not suitable for certain group of students with disibilities such as those that have dysgraphia,

BEST FOR:
---------------------------------------
<types of activities from courses you teach or have taught that could benefit from an emphasis on tracing>
Programs with loops and variable assignments work well with tracing diagrams
Conditional statements also can work with tracing diagrams
Paired programming to help with expert and novice program knowledge for problem solving
Differentiation  for lesson planning


LEAST-SUITED TO:
---------------------------------------
<opposite of above -- and why>
If you are completey new to the code then this would not help
Might not work for kids who are not visual learners or auditory learners
Not good if multiple methods, hard to trace code
Can't use for those with perceptual issues or dysgraphia and other certain disabilities





PROVEN PRO-TIPS:
---------------------------------------
<
 anything that has worked well for any member of your team, in the way of ...
 * live tracing ("trace-along" a la livecoding)
 * tracing as an assignment
 * tools, physical/online/otherwise that make it easier/clearer
 * etc 
>whiteboard such as notability, jamboard, whiteboard in Zoom,etc. Good for multiplayer/pair programming for use
trace along as done in class through modeling


RESOURCES:
---------------------------------------
< any links, reading titles, names, etc. you have find useful >

Miro - https://miro.com/login-displays/ (interactive whiteoboard)

Seesaw - https://app.seesaw.me/ This is an app (desktop or tablet-based) that allows students to record their responses through video or audio. Free teacher account.

Translation software such as Google Translate or Microsoft Translator

Java Visualizer - https://cscircles.cemc.uwaterloo.ca/java_visualize/

YouTube Videos Playlist based on CS topics (i.e. LinkedList, Arrays, etc.)

Computer Science Teachers Association (CSTA) Inclusive Teaching Pedagogies
https://csteachers.org/page/inclusive-teaching-pedagogies

Strategies for Effective & Inclusive CS Teaching
https://www.csforallteachers.org/resource/strategies-effective-inclusive-cs-teaching-free-virtual-course

Inclusive CS Teaching from CS Awesome https://www.inclusivecsteaching.org/

Inclusive Classroom Resources & Best Practices from University of Pittsburg, School of Computing and Information, Department of Computer Science
https://www.cs.pitt.edu/community/resources/inclusive-classroom-resources-best-practices

OTHER:
---------------------------------------
< anything you like, not already covered in prior prompts. >
When should you introduce the topic?
